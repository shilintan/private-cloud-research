# Please edit the object below. Lines beginning with a '#' will be ignored,
# and an empty file will abort the edit. If an error occurs while saving this file will be
# reopened with the relevant failures.
#
apiVersion: v1
kind: Pod
metadata:
  annotations:
    configmap-bin-hash: 49ec64d277c40926712727ae7826c9c78c64b9af23d81875ad45cc1701c62dde
    configmap-etc-hash: 6d9518cab1b777db2d78a2a20ee18bcba917a74550f85eadeec2c15952635af8
    openstackhelm.openstack.org/release_uuid: ""
  creationTimestamp: "2023-12-19T06:56:55Z"
  generateName: neutron-metadata-agent-default-
  labels:
    application: neutron
    component: metadata-agent
    controller-revision-hash: 7c7f7f7dc
    pod-template-generation: "2"
    release_group: neutron
  name: neutron-metadata-agent-default-jh8w5
  namespace: openstack
  ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: neutron-metadata-agent-default
      uid: b892c3d2-d1b3-4e1d-89ef-dda0e688d584
  resourceVersion: "56354"
  uid: d5ed966a-bd65-46bb-bae6-cdf1f07c396a
spec:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchFields:
              - key: metadata.name
                operator: In
                values:
                  - k8s-192-168-203-174
  containers:
    - command:
        - /tmp/neutron-metadata-agent.sh
      env:
        - name: RPC_PROBE_TIMEOUT
          value: "60"
        - name: RPC_PROBE_RETRIES
          value: "2"
      image: docker.io/openstackhelm/neutron:2023.2-ubuntu_jammy
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
            - python
            - /tmp/health-probe.py
            - --config-file
            - /etc/neutron/neutron.conf
            - --config-file
            - /etc/neutron/metadata_agent.ini
            - --liveness-probe
            - --use-fqdn
        failureThreshold: 3
        initialDelaySeconds: 120
        periodSeconds: 600
        successThreshold: 1
        timeoutSeconds: 580
      name: neutron-metadata-agent
      readinessProbe:
        exec:
          command:
            - python
            - /tmp/health-probe.py
            - --config-file
            - /etc/neutron/neutron.conf
            - --config-file
            - /etc/neutron/metadata_agent.ini
            - --use-fqdn
        failureThreshold: 3
        initialDelaySeconds: 30
        periodSeconds: 190
        successThreshold: 1
        timeoutSeconds: 185
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /tmp
          name: pod-tmp
        - mountPath: /var/lib/neutron
          name: pod-var-neutron
        - mountPath: /tmp/neutron-metadata-agent.sh
          name: neutron-bin
          readOnly: true
          subPath: neutron-metadata-agent.sh
        - mountPath: /tmp/health-probe.py
          name: neutron-bin
          readOnly: true
          subPath: health-probe.py
        - mountPath: /etc/neutron/neutron.conf
          name: neutron-etc
          readOnly: true
          subPath: neutron.conf
        - mountPath: /etc/neutron/logging.conf
          name: neutron-etc
          readOnly: true
          subPath: logging.conf
        - mountPath: /etc/neutron/plugins/ml2/ml2_conf.ini
          name: neutron-etc
          readOnly: true
          subPath: ml2_conf.ini
        - mountPath: /etc/neutron/plugins/ml2/openvswitch_agent.ini
          name: neutron-etc
          readOnly: true
          subPath: openvswitch_agent.ini
        - mountPath: /etc/neutron/metadata_agent.ini
          name: neutron-etc
          readOnly: true
          subPath: metadata_agent.ini
        - mountPath: /etc/sudoers.d/kolla_neutron_sudoers
          name: neutron-etc
          readOnly: true
          subPath: neutron_sudoers
        - mountPath: /etc/neutron/rootwrap.conf
          name: neutron-etc
          readOnly: true
          subPath: rootwrap.conf
        - mountPath: /etc/neutron/rootwrap.d/debug.filters
          name: neutron-etc
          readOnly: true
          subPath: debug.filters
        - mountPath: /etc/neutron/rootwrap.d/dhcp.filters
          name: neutron-etc
          readOnly: true
          subPath: dhcp.filters
        - mountPath: /etc/neutron/rootwrap.d/dibbler.filters
          name: neutron-etc
          readOnly: true
          subPath: dibbler.filters
        - mountPath: /etc/neutron/rootwrap.d/ebtables.filters
          name: neutron-etc
          readOnly: true
          subPath: ebtables.filters
        - mountPath: /etc/neutron/rootwrap.d/ipset-firewall.filters
          name: neutron-etc
          readOnly: true
          subPath: ipset-firewall.filters
        - mountPath: /etc/neutron/rootwrap.d/iptables-firewall.filters
          name: neutron-etc
          readOnly: true
          subPath: iptables-firewall.filters
        - mountPath: /etc/neutron/rootwrap.d/l3.filters
          name: neutron-etc
          readOnly: true
          subPath: l3.filters
        - mountPath: /etc/neutron/rootwrap.d/linuxbridge-plugin.filters
          name: neutron-etc
          readOnly: true
          subPath: linuxbridge-plugin.filters
        - mountPath: /etc/neutron/rootwrap.d/netns-cleanup.filters
          name: neutron-etc
          readOnly: true
          subPath: netns-cleanup.filters
        - mountPath: /etc/neutron/rootwrap.d/openvswitch-plugin.filters
          name: neutron-etc
          readOnly: true
          subPath: openvswitch-plugin.filters
        - mountPath: /etc/neutron/rootwrap.d/privsep.filters
          name: neutron-etc
          readOnly: true
          subPath: privsep.filters
        - mountPath: /var/lib/neutron/openstack-helm
          name: socket
        - mountPath: /run/netns
          mountPropagation: Bidirectional
          name: host-run-netns
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-rlgnt
          readOnly: true
  dnsPolicy: ClusterFirstWithHostNet
  enableServiceLinks: true
  hostNetwork: true
  initContainers:
    - command:
        - kubernetes-entrypoint
      env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: INTERFACE_NAME
          value: eth0
        - name: PATH
          value: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/
        - name: DEPENDENCY_SERVICE
          value: openstack:rabbitmq,openstack:neutron-server,openstack:nova-api,openstack:metadata
        - name: DEPENDENCY_JOBS
          value: neutron-rabbit-init
        - name: DEPENDENCY_DAEMONSET
        - name: DEPENDENCY_CONTAINER
        - name: DEPENDENCY_POD_JSON
          value: '[{"labels":{"application":"neutron","component":"neutron-ovs-agent"},"requireSameNode":true}]'
        - name: DEPENDENCY_CUSTOM_RESOURCE
      image: quay.io/airshipit/kubernetes-entrypoint:v1.0.0
      imagePullPolicy: IfNotPresent
      name: init
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsUser: 65534
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-rlgnt
          readOnly: true
    - command:
        - /tmp/neutron-metadata-agent-init.sh
      env:
        - name: NEUTRON_USER_UID
          value: "42424"
      image: docker.io/openstackhelm/neutron:2023.2-ubuntu_jammy
      imagePullPolicy: IfNotPresent
      name: neutron-metadata-agent-init
      resources: {}
      securityContext:
        readOnlyRootFilesystem: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /tmp
          name: pod-tmp
        - mountPath: /tmp/neutron-metadata-agent-init.sh
          name: neutron-bin
          readOnly: true
          subPath: neutron-metadata-agent-init.sh
        - mountPath: /etc/neutron/neutron.conf
          name: neutron-etc
          readOnly: true
          subPath: neutron.conf
        - mountPath: /var/lib/neutron/openstack-helm
          name: socket
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-rlgnt
          readOnly: true
  nodeName: k8s-192-168-203-174
  nodeSelector:
    openstack-control-plane: enabled
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    runAsUser: 42424
  serviceAccount: neutron-metadata-agent
  serviceAccountName: neutron-metadata-agent
  shareProcessNamespace: true
  terminationGracePeriodSeconds: 30
  tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
  volumes:
    - emptyDir: {}
      name: pod-tmp
    - emptyDir: {}
      name: pod-var-neutron
    - configMap:
        defaultMode: 365
        name: neutron-bin
      name: neutron-bin
    - name: neutron-etc
      secret:
        defaultMode: 292
        secretName: neutron-metadata-agent-default
    - hostPath:
        path: /var/lib/neutron/openstack-helm
        type: ""
      name: socket
    - hostPath:
        path: /run/netns
        type: ""
      name: host-run-netns
    - name: kube-api-access-rlgnt
      projected:
        defaultMode: 420
        sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
                - key: ca.crt
                  path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
